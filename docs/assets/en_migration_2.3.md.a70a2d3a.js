import{_ as s,c as n,o as a,d as l}from"./app.2f48642a.js";const i=JSON.parse('{"title":"Project Migration to Version 2.3","description":"","frontmatter":{},"headers":[{"level":2,"title":"Internal Events","slug":"internal-events","link":"#internal-events","children":[]},{"level":2,"title":"Bukkit Listener i filtrowanie event\xF3w","slug":"bukkit-listener-i-filtrowanie-eventow","link":"#bukkit-listener-i-filtrowanie-eventow","children":[]},{"level":2,"title":"Searching for Components in the Session Tree","slug":"searching-for-components-in-the-session-tree","link":"#searching-for-components-in-the-session-tree","children":[]},{"level":2,"title":"Tasks and Threads","slug":"tasks-and-threads","link":"#tasks-and-threads","children":[]},{"level":2,"title":"Player State Containers","slug":"player-state-containers","link":"#player-state-containers","children":[]},{"level":2,"title":"File system","slug":"file-system","link":"#file-system","children":[]},{"level":2,"title":"Loading Schematics","slug":"loading-schematics","link":"#loading-schematics","children":[]},{"level":2,"title":"Loading Tags","slug":"loading-tags","link":"#loading-tags","children":[]},{"level":2,"title":"Safe Zone of the Map","slug":"safe-zone-of-the-map","link":"#safe-zone-of-the-map","children":[]}],"relativePath":"en/migration_2.3.md"}'),p={name:"en/migration_2.3.md"},o=l(`<h1 id="project-migration-to-version-2-3" tabindex="-1">Project Migration to Version 2.3 <a class="header-anchor" href="#project-migration-to-version-2-3" aria-hidden="true">#</a></h1><h2 id="internal-events" tabindex="-1">Internal Events <a class="header-anchor" href="#internal-events" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructor</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// when the component is started</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentDestructor</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// when the component is shut down</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerConstructor</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// when a player joins the session or the component is started (for every player already in the session)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerDestructor</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// when a player leaves the session or the component is shut down (for every player in the session)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerJoinRequest</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerJoinRequest</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// when a player attempts to join the session (used to block joining, e.g., full lobby)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentRecovery</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// used to assign emergency events that execute after a server restart if the server crashed</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// serves to remove persistent resources, e.g., deleting an NPC from another plugin that was created for the session</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// this is persistent, so the recovery system ensures it gets removed even if the server shuts down abruptly</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerRecovery</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// used to assign emergency events that execute when a player rejoins the server after a crash</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// serves to restore player state (e.g., removing session items, which is built into the OtherEquipment controller)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// to maintain state consistency</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">componentConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructorEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">componentDestructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentDestructorEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerConstructorEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerDestructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerDestructorEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerCanJoin</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerCanJoinEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerCanQuit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerQuitEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerDestructorRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerRecoveryEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="bukkit-listener-i-filtrowanie-eventow" tabindex="-1">Bukkit Listener i filtrowanie event\xF3w <a class="header-anchor" href="#bukkit-listener-i-filtrowanie-eventow" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>New methods have been introduced with constant computational complexity when searching for components related to a listener.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyComponent.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Listeners</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineListeners</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineListeners</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyListener</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyListener</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Listener</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EventHandler</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ignoreCancelled</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onBlockPlace</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BlockPlaceEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SessionManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">session</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Warning! Never use this for component lookup.</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// These methods are solely for filtering events from Bukkit listeners.</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// They allow finding components of a given type that have a listener of a given type.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// getClass() -- returns MyListener.class (we provide the listener class)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Method 1</span></span>
<span class="line"><span style="color:#A6ACCD;">        ListenerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">each</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> myComponent </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// events for each component of this type in the session</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Method 2</span></span>
<span class="line"><span style="color:#A6ACCD;">        ListenerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">first</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> myComponent </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// events for the first component of this type in the session</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Method 3</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> myComponents </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ListenerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">components</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> myComponent </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> myComponents</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// events for each component of this type in the session</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Method 4</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> myComponent </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ListenerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">component</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getClass</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">myComponent </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// events for the first component of this type in the session</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyController.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Nullable</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Listener</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getListener</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyListener</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyListener</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Listener</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EventHandler</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ignoreCancelled</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onBlockPlace</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BlockPlaceEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SessionManger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSession</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> controllers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ControllerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getControllers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> controller </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> controllers</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;">// events for each component of this type in the session</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="searching-for-components-in-the-session-tree" tabindex="-1">Searching for Components in the Session Tree <a class="header-anchor" href="#searching-for-components-in-the-session-tree" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyComponent.class</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> components </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ComponentManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">components</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// components that are instances of MyComponent.class and are active in the session tree</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> component </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ComponentManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">firstComponent</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// the first component that is an instance of MyComponent.class and is active in the session tree</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyComponent.class</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> controllers </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ControllerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getControllers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// controllers that are instances of MyComponent.class and are active in the session tree</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> controller </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ControllerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getFirstController</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;">// the first controller that is an instance of MyComponent.class and is active in the session tree</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div></div><h2 id="tasks-and-threads" tabindex="-1">Tasks and Threads <a class="header-anchor" href="#tasks-and-threads" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>The <strong>getProcess()</strong> method has been removed. Now, controlled tasks are run directly from the component.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyController.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructor</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Starts a task (after zero delay) that repeats every second</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">runTaskTimer</span><span style="color:#89DDFF;">(()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">players</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> Time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">zero</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> Time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">seconds</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Available task variants:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTask</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTaskAsync</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTaskLater</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTaskLaterAsync</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTaskTimer</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">//runTaskTimerAsync</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">componentConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructorEvent</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Starts a task (after zero delay) that repeats every second</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">getProcess</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">runControlledTaskTimer</span><span style="color:#89DDFF;">(()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">getSession</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">getPlayers</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">forEach</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> Time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Zero</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> Time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Seconds</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="player-state-containers" tabindex="-1">Player State Containers <a class="header-anchor" href="#player-state-containers" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>An example of a built-in component that uses <strong>PlayerContainer</strong> to manage individual player states. This way, it can associate a player with their initial GameMode.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GameModeState</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PlayerState</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GameModeState</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Player</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OtherGameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PlayerContainer</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">GameModeState</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">OtherGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BaseComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">baseComponent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">baseComponent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructor</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        states </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PlayerContainer</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#A6ACCD;">GameModeState</span><span style="color:#89DDFF;">::new</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerConstructor</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onPlayerInit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createOrThrow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerDestructor</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onPlayerDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">removeOrThrow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerRecovery</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onPlayerRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getOrThrow</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">owner</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> state</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">register</span><span style="color:#89DDFF;">(this,</span><span style="color:#A6ACCD;"> player </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">GameModeState</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PlayerState</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GameModeState</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Player</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OtherGameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PlayerContainer</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">GameModeState</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">OtherGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ISessionComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">sessionComponent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">GameMode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sessionComponent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> gameMode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">componentConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructorEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">componentConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        states </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PlayerContainer</span><span style="color:#89DDFF;">&lt;&gt;(</span><span style="color:#A6ACCD;">GameModeState</span><span style="color:#89DDFF;">::new</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerConstructorEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">playerConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerDestructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerDestructorEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">playerDestructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clearState</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">playerDestructorRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerRecoveryEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">playerDestructorRecovery</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> state </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> states</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getForPlayer</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">final</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> gameMode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> state</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getGameMode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getLambdas</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setGameMode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">gameMode</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="file-system" tabindex="-1">File system <a class="header-anchor" href="#file-system" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>Defines which folder the <strong>fileManager()</strong> method points to. Schematics, tags, and other resources will be loaded from this directory.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyBoard.class</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineDirectoryPath</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Spos\xF3b 1 (statyczna nazwa)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Wskazuje na plugins/SessionAPI/board/myDirectory</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Ka\u017Cdy komponent tej instancji b\u0119dzie korzysta\u0142 z tego katalogu</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Dlatego lepiej u\u017Cywa\u0107 dynamicznej nazwy z u\u017Cyciem name()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">board/myDirectory</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Spos\xF3b 2 (dynamiczna nazwa)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// name() zwraca: &lt;className&gt;&lt;C for controller | B for board | S for session&gt;#&lt;pluginName&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">board/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">name</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><p>Previously, the file system for the map could be defined by overriding the <strong>getName()</strong> method.</p></div><h2 id="loading-schematics" tabindex="-1">Loading Schematics <a class="header-anchor" href="#loading-schematics" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>The default <strong>generate()</strong> method loads a map from a schematic in the map files.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generate</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Loading a schematic from the &quot;SessionAPI/&lt;defineDirectoryPath()&gt;&quot; directory</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> fileManger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fileManager</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fileManger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existSchematic</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CONSTRUCTOR_FILE_NAME</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        fileManger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadSchematic</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">CONSTRUCTOR_FILE_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">space</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">center</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyBoard.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generate</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Loading a schematic from the &quot;SessionAPI/board/&lt;getName()&gt;&quot; directory</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSchematic</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SCHEMATIC_CONSTRUCTOR_NAME</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadSchematic</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SCHEMATIC_CONSTRUCTOR_NAME</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><h2 id="loading-tags" tabindex="-1">Loading Tags <a class="header-anchor" href="#loading-tags" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>The default <strong>defineTags()</strong> method loads Board tags.</p><p>Example operations for loading tags:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// Used within a component</span></span>
<span class="line"><span style="color:#676E95;">// Uses the &quot;SessionAPI/&lt;defineDirectoryPath()&gt;&quot; directory</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> fileManger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fileManager</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;">// OR</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Custom folder</span></span>
<span class="line"><span style="color:#676E95;">// Uses the &quot;SessionAPI/board/MyBoard&quot; directory</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> fileManager </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FileManager</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">board/MyBoard</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">TagResolve</span><span style="color:#A6ACCD;"> tagResolve </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#676E95;">// Reading tags</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">fileManger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existTag</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TAG_FILE_NAME</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    tagResolve </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">  fileManger</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadTag</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TAG_FILE_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">center</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Saving tags</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tagResolve </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    fileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">saveTag</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TAG_FILE_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> tagResolve</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> boardFileManager </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BoardFileManager</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">getName</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getSpace</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">TagResolve</span><span style="color:#A6ACCD;"> tagResolve </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSignTagData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SIGN_TAG_DATA_NAME</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    tagResolve </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">loadSignTagData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SIGN_TAG_DATA_NAME</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tagResolve </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">saveSignTagData</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SIGN_TAG_DATA_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> tagResolve</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div></div><h2 id="safe-zone-of-the-map" tabindex="-1">Safe Zone of the Map <a class="header-anchor" href="#safe-zone-of-the-map" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">v2.3</p><p>Defines the area that is destroyed by <strong>degenerate()</strong>. Only within the safe zone can blocks be placed and block operations performed.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyBoard.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ISpatial</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineSecureZone</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Method 1 (default) -- based on the destructor&#39;s size</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fileManager</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">loadSchematicToSpatial</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DESTRUCTOR_FILE_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">center</span><span style="color:#89DDFF;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Method 2 -- on the entire assigned session map.</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Ensure that degenerate() covers the entire assigned space.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> ISpatial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clone</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">space</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div><div class="danger custom-block"><p class="custom-block-title">Old</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// MyBoard.class</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generate</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ... (map generation code omitted)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// Setting SecureZone</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">existsSchematic</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SCHEMATIC_DESTRUCTOR_NAME</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        secureZone </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> boardFileManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toSpatial</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SCHEMATIC_DESTRUCTOR_NAME</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBase</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></div>`,27),e=[o];function t(c,r,y,D,A,F){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
