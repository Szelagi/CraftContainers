import{_ as s,c as a,o as n,d as e}from"./app.6c2f0944.js";const o="/SessionAPI/assets/pierwszy-kontener.5974f0e8.png",l="/SessionAPI/assets/schemat-hierarchia.39b8529a.png",F=JSON.parse('{"title":"Pierwszy projekt","description":"","frontmatter":{},"headers":[{"level":2,"title":"Listenery w bibliotece","slug":"listenery-w-bibliotece","link":"#listenery-w-bibliotece","children":[]},{"level":2,"title":"Tworzenie g\u0142\xF3wnej klasy kontenera","slug":"tworzenie-g\u0142ownej-klasy-kontenera","link":"#tworzenie-g\u0142ownej-klasy-kontenera","children":[{"level":3,"title":"Najwa\u017Cniejsze listenery","slug":"najwazniejsze-listenery","link":"#najwazniejsze-listenery","children":[]},{"level":3,"title":"Najwa\u017Cniejsze metody","slug":"najwazniejsze-metody","link":"#najwazniejsze-metody","children":[]}]},{"level":2,"title":"Tworzenie klasy odpowiedzialnej za map\u0119","slug":"tworzenie-klasy-odpowiedzialnej-za-mape","link":"#tworzenie-klasy-odpowiedzialnej-za-mape","children":[{"level":3,"title":"Najwa\u017Cniejsze listenery","slug":"najwazniejsze-listenery-1","link":"#najwazniejsze-listenery-1","children":[]}]},{"level":2,"title":"Tworzenie kontrolera","slug":"tworzenie-kontrolera","link":"#tworzenie-kontrolera","children":[{"level":3,"title":"Listenery Bukkit","slug":"listenery-bukkit","link":"#listenery-bukkit","children":[]}]},{"level":2,"title":"Uruchamianie kontenera instancji sesji","slug":"uruchamianie-kontenera-instancji-sesji","link":"#uruchamianie-kontenera-instancji-sesji","children":[]},{"level":2,"title":"Utworzona struktura drzewa sesji","slug":"utworzona-struktura-drzewa-sesji","link":"#utworzona-struktura-drzewa-sesji","children":[]}],"relativePath":"pl/introduction/quick-start.md"}'),p={name:"pl/introduction/first-project.md"},t=e('<h1 id="pierwszy-projekt" tabindex="-1">Pierwszy projekt <a class="header-anchor" href="#pierwszy-projekt" aria-hidden="true">#</a></h1><p>Proste wprowadzenie do pracy z SessionAPI, obejmuj\u0105ce podstawy zarz\u0105dzania sesjami i komponentami.</p><p><img src="'+o+`" alt="zdj\u0119cie pogl\u0105dowe pierwszego projektu"></p><h2 id="listenery-w-bibliotece" tabindex="-1">Listenery w bibliotece <a class="header-anchor" href="#listenery-w-bibliotece" aria-hidden="true">#</a></h2><p>Ka\u017Cdy komponent (<code>Session</code>, <code>Board</code>, <code>Controller</code>) posiada wbudowane zdarzenia wewn\u0119trzne, kt\xF3re odpowiadaj\u0105 za r\xF3\u017Cne etapy \u017Cycia komponentu oraz interakcj\u0119 z graczami.</p><ul><li><p><strong>onComponentInit()</strong> \u2013 Wywo\u0142ywany automatycznie, gdy komponent zostaje utworzony. U\u017Cywany do inicjalizacji komponentu (np. tworzenie zasob\xF3w, uruchamianie w\u0105tk\xF3w, inicjowanie logiki).</p></li><li><p><strong>onComponentDestroy()</strong> \u2013 Wywo\u0142ywany automatycznie, gdy komponent jest wy\u0142\u0105czany. U\u017Cywany do usuwania zasob\xF3w i element\xF3w stworzonych przez komponent (np. zatrzymywanie w\u0105tk\xF3w, czyszczenie danych).</p></li><li><p><strong>onPlayerInit()</strong> \u2013 Wywo\u0142ywany automatycznie, gdy gracz do\u0142\u0105cza do sesji (lub je\u015Bli komponent zosta\u0142 uruchomiony po do\u0142\u0105czeniu gracza). U\u017Cywany do nadania graczowi w\u0142a\u015Bciwo\u015Bci, przenoszenia go na map\u0119 itp.</p></li><li><p><strong>onPlayerDestroy()</strong> \u2013 Wywo\u0142ywany automatycznie, gdy gracz opuszcza sesj\u0119. U\u017Cywany do usuwania w\u0142a\u015Bciwo\u015Bci gracza, kt\xF3re by\u0142y przypisane na potrzeby sesji (np. usuwanie efekt\xF3w czy zmiany statusu).</p></li></ul><h2 id="tworzenie-g\u0142ownej-klasy-kontenera" tabindex="-1">Tworzenie g\u0142\xF3wnej klasy kontenera <a class="header-anchor" href="#tworzenie-g\u0142ownej-klasy-kontenera" aria-hidden="true">#</a></h2><p><strong>Session</strong> to klasa zarz\u0105dzaj\u0105ca sesj\u0105 gry, odpowiadaj\u0105ca za graczy, map\u0119 i kontrolery. Inicjuje, uruchamia i ko\u0144czy sesj\u0119, zapewniaj\u0105c organizacj\u0119 i kontrol\u0119 nad gr\u0105.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyContainer</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Session</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyContainer</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">JavaPlugin</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">plugin</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">plugin</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">NotNull</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Ta metoda jest wywo\u0142ywana automatycznie, aby zdefiniowa\u0107 domy\u015Bln\u0105 map\u0119 dla kontenera.</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Mapa mo\u017Ce by\u0107 p\xF3\u017Aniej zmieniona za pomoc\u0105 metody .setBoard(#Board), je\u015Bli zajdzie taka potrzeba.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">protected</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Board</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defaultBoard</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyBoard</span><span style="color:#89DDFF;">(this);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// Ta metoda jest wywo\u0142ywana automatycznie w momencie tworzenia instancji sesji.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ComponentConstructor</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onComponentInit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// Aby doda\u0107 kontroler do drzewa komponent\xF3w sesji, tworzymy jego instancj\u0119,</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// a jako argument przekazujemy &quot;this&quot; (jako rodzica), co oznacza, \u017Ce kontroler b\u0119dzie pod\u0142\u0105czony do bie\u017C\u0105cej sesji.</span></span>
<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#676E95;">// Nast\u0119pnie uruchamiamy kontroler, aby zacz\u0105\u0142 dzia\u0142a\u0107.</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyController</span><span style="color:#89DDFF;">(this).</span><span style="color:#82AAFF;">start</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;">// Nie musimy przechowywa\u0107 jego instancji, poniewa\u017C zostanie automatycznie wy\u0142\u0105czony wraz z wy\u0142\u0105czeniem rodzica, w tym przypadku MySession.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="najwazniejsze-listenery" tabindex="-1">Najwa\u017Cniejsze listenery <a class="header-anchor" href="#najwazniejsze-listenery" aria-hidden="true">#</a></h3><ul><li><p><strong>onComponentInit()</strong> \u2013 Wywo\u0142ywany automatycznie podczas tworzenia instancji sesji, u\u017Cywany do uruchomienia wymaganych zasob\xF3w.</p></li><li><p><strong>onComponentDestroy()</strong> \u2013 Wywo\u0142ywany automatycznie podczas usuwania sesji, s\u0142u\u017Cy do zwolnienia i usuni\u0119cia zasob\xF3w.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Biblioteka automatycznie \u015Bledzi utworzone komponenty oraz w\u0105tki, dlatego nie musisz u\u017Cywa\u0107 metody <code>onComponentDestroy()</code> do ich zwolnienia \u2013 zrobi to za Ciebie.</p></div><h3 id="najwazniejsze-metody" tabindex="-1">Najwa\u017Cniejsze metody <a class="header-anchor" href="#najwazniejsze-metody" aria-hidden="true">#</a></h3><ul><li><p><strong>start()</strong> \u2013 Uruchamia sesj\u0119, buduje map\u0119, oraz inicjuje i uruchamia wszystkie kontrolery.</p></li><li><p><strong>stop()</strong> \u2013 Usuwa sesj\u0119, w tym struktur\u0119, map\u0119 i graczy, a tak\u017Ce usuwa listenery oraz w\u0105tki zwi\u0105zane z sesj\u0105.</p></li><li><p><strong>addPlayer(#Player)</strong> \u2013 Dodaje gracza do kontenera.</p></li><li><p><strong>removePlayer(#Player)</strong> \u2013 Usuwa gracza z kontenera.</p></li><li><p><strong>setBoard(#Board)</strong> \u2013 Zmienia map\u0119 w sesji.</p></li></ul><h2 id="tworzenie-klasy-odpowiedzialnej-za-mape" tabindex="-1">Tworzenie klasy odpowiedzialnej za map\u0119 <a class="header-anchor" href="#tworzenie-klasy-odpowiedzialnej-za-mape" aria-hidden="true">#</a></h2><p>Board to klasa reprezentuj\u0105ca map\u0119, odpowiedzialna za jej budowanie i usuwanie. Posiada listenery do obs\u0142ugi tworzenia i niszczenia planszy, a tak\u017Ce do inicjalizacji graczy.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBoard</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Board</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyBoard</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Session</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="najwazniejsze-listenery-1" tabindex="-1">Najwa\u017Cniejsze listenery <a class="header-anchor" href="#najwazniejsze-listenery-1" aria-hidden="true">#</a></h3><ul><li><p><strong>generate()</strong> \u2013 Wywo\u0142ywany do zbudowania mapy.</p></li><li><p><strong>degenerate()</strong> \u2013 Wywo\u0142ywany do usuni\u0119cia mapy.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Klasa Board zawiera domy\u015Blne metody do budowania i niszczenia mapy, oparte na schematach FAWE. Zwykle nie ma potrzeby ich przeci\u0105\u017Cania, poniewa\u017C biblioteka zapewnia wystarczaj\u0105ce rozwi\u0105zania. Przeci\u0105\u017Cenie metod <code>generate()</code> i <code>degenerate()</code> jest konieczne tylko w przypadku specjalnych, niestandardowych operacji.</p></div><h2 id="tworzenie-kontrolera" tabindex="-1">Tworzenie kontrolera <a class="header-anchor" href="#tworzenie-kontrolera" aria-hidden="true">#</a></h2><p>Kontroler obs\u0142uguje logik\u0119 dla graczy. W tym przypadku wysy\u0142amy wiadomo\u015B\u0107 &quot;Hello, world!&quot; do ka\u017Cdego gracza, kt\xF3ry do\u0142\u0105cza do kontenera.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyController</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyController</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">BaseComponent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">baseComponent</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">baseComponent</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerInit</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerConstructor</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onPlayerInit</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">		player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="listenery-bukkit" tabindex="-1">Listenery Bukkit <a class="header-anchor" href="#listenery-bukkit" aria-hidden="true">#</a></h3><ul><li><strong>defineListeners()</strong> : <em>Listener (Bukkit)</em> \u2013 Metoda wywo\u0142ywana automatycznie. Jej zadaniem jest zwr\xF3cenie klas typu Listener, kt\xF3re b\u0119d\u0105 obs\u0142ugiwa\u0107 zdarzenia zwi\u0105zane z danym kontrolerem w systemie Bukkit.</li></ul><details><summary>Przyk\u0142ad wykrywania zdarzenia skoku gracza</summary><p>Je\u015Bli chcemy wykrywa\u0107 zdarzenia skoku gracza wy\u0142\u0105cznie w sesji kontrolowanej przez <code>MyController</code>, mo\u017Cemy zarejestrowa\u0107 nas\u0142uchiwacz w nast\u0119puj\u0105cy spos\xF3b:</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Listeners</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineListeners</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> super</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineListeners</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyListener</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyListener</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Listener</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EventHandler</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ignoreCancelled</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">onPlayerJump</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">PlayerJumpEvent</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> player </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPlayer</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> session </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SessionManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">session</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        ListenerManager</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">each</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">session</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyListener</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> MyController</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> myController </span><span style="color:#C792EA;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Skoczy\u0142e\u015B!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Biblioteka automatycznie zarz\u0105dza cyklem \u017Cycia Listener\xF3w (Bukkit). Kiedy kontroler zostanie uruchomiony, a dla niego nie ma aktywnego listenera, framework stworzy now\u0105 instancj\u0119 i za\u0142aduje go. Gdy listener nie b\u0119dzie ju\u017C potrzebny (np. gdy \u017Caden kontener nie u\u017Cywa danego komponentu), SessionAPI usunie go z serwera, dbaj\u0105c o wydajno\u015B\u0107. Biblioteka unika duplikowania listener\xF3w, aby zapewni\u0107 optymaln\u0105 prac\u0119 systemu.</p></div></details><hr><h2 id="uruchamianie-kontenera-instancji-sesji" tabindex="-1">Uruchamianie kontenera instancji sesji <a class="header-anchor" href="#uruchamianie-kontenera-instancji-sesji" aria-hidden="true">#</a></h2><p>Aby uruchomi\u0107 kontener, tworzymy jego instancj\u0119 i wywo\u0142ujemy metod\u0119 start(). Dodanie gracza do kontenera wywo\u0142uje przygotowan\u0105 logik\u0119, np. powitanie.</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">var container = new MyContainer(plugin);</span></span>
<span class="line"><span style="color:#A6ACCD;">container.start();</span></span>
<span class="line"><span style="color:#A6ACCD;">container.addPlayer(player);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="utworzona-struktura-drzewa-sesji" tabindex="-1">Utworzona struktura drzewa sesji <a class="header-anchor" href="#utworzona-struktura-drzewa-sesji" aria-hidden="true">#</a></h2><p>Po uruchomieniu sesji zostanie stworzona zaplanowana struktura drzewa, kt\xF3ra umo\u017Cliwia \u0142atw\u0105 wymian\u0119 rozwi\u0105za\u0144, poniewa\u017C wszystko jest obudowane w komponenty. Jest ona dobrze ustrukturyzowana i zapewnia przewidywalne zwalnianie zasob\xF3w. Kiedy fragment drzewa zostaje od\u0142\u0105czony, wszystkie jego elementy, \u0142\u0105cznie z dzie\u0107mi, s\u0105 rekurencyjnie niszczone, a listenery uruchamiane w przewidywalnej kolejno\u015Bci.</p><p><img src="`+l+'" alt="zdj\u0119cie pogl\u0105dowe pierwszego projektu"></p>',33),r=[t];function i(c,y,D,A,C,d){return n(),a("div",null,r)}const u=s(p,[["render",i]]);export{F as __pageData,u as default};
