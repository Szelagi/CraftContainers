import{_ as n,c as e,o as a,d as o}from"./app.8706ebaa.js";const k=JSON.parse('{"title":"Adnotacje","description":"","frontmatter":{},"headers":[{"level":2,"title":"Komponenty","slug":"komponenty","link":"#komponenty","children":[{"level":3,"title":"@SingletoneComponent","slug":"singletonecomponent","link":"#singletonecomponent","children":[]},{"level":3,"title":"@Dependency(component)","slug":"dependency-component","link":"#dependency-component","children":[]},{"level":3,"title":"Pobieranie komponentu zale\u017Cnego","slug":"pobieranie-komponentu-zaleznego","link":"#pobieranie-komponentu-zaleznego","children":[]}]}],"relativePath":"pl/learn/annotations.md"}'),s={name:"pl/learn/annotations.md"},l=o(`<h1 id="adnotacje" tabindex="-1">Adnotacje <a class="header-anchor" href="#adnotacje" aria-hidden="true">#</a></h1><h2 id="komponenty" tabindex="-1">Komponenty <a class="header-anchor" href="#komponenty" aria-hidden="true">#</a></h2><h3 id="singletonecomponent" tabindex="-1">@SingletoneComponent <a class="header-anchor" href="#singletonecomponent" aria-hidden="true">#</a></h3><p>Adnotacja zapewnia, \u017Ce komponent mo\u017Ce istnie\u0107 maksymalnie jeden dla danego kontenera. Pr\xF3ba uruchomienia wi\u0119cej ni\u017C jednej instancji tego samego komponentu w tym samym kontenerze skutkuje wyj\u0105tkiem.</p><p>Stosuje si\u0119 j\u0105 do oznaczania komponent\xF3w, kt\xF3re nie powinny by\u0107 uruchamiane wielokrotnie w ramach jednej instancji kontenera, aby unikn\u0105\u0107 b\u0142\u0119d\xF3w.</p><h4 id="przyk\u0142ad" tabindex="-1">Przyk\u0142ad <a class="header-anchor" href="#przyk\u0142ad" aria-hidden="true">#</a></h4><p>Kontroler <code>NoPlaceAndBreak</code> blokuje wszystkie zdarzenia zwi\u0105zane ze stawianiem i k\u0142adzeniem blok\xF3w. Uruchomienie wielu instancji tego samego kontrolera nie jest wskazane, dlatego oznacza si\u0119 go adnotacj\u0105 <code>@SingletonComponent</code>.</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SingletonComponent</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyLogic</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...}</span></span>
<span class="line"></span></code></pre></div><h3 id="dependency-component" tabindex="-1">@Dependency(<code>component</code>) <a class="header-anchor" href="#dependency-component" aria-hidden="true">#</a></h3><p>Adnotacja zapewnia, \u017Ce wskazany jako argument komponent b\u0119dzie aktywny przez ca\u0142y cykl \u017Cycia oznaczonego komponentu. Je\u017Celi zale\u017Cno\u015B\u0107 nie b\u0119dzie dost\u0119pna w jakim kolwiek momencie, zostanie zg\u0142oszony wyj\u0105tek.</p><p>Stosuje si\u0119 j\u0105, gdy komponent musi zawsze wsp\xF3\u0142pracowa\u0107 z innym komponentem \u2013 brak dost\u0119pnej zale\u017Cno\u015Bci powoduje natychmiastowy b\u0142\u0105d.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Nie tworzy\u0107 zale\u017Cno\u015Bci cyklicznych ani nie wymaga\u0107 od rodzica jego w\u0142asnego dziecka jako zale\u017Cno\u015Bci.</p></div><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MyComponent</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyLogic</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{...}</span></span>
<span class="line"></span></code></pre></div><h3 id="pobieranie-komponentu-zaleznego" tabindex="-1">Pobieranie komponentu zale\u017Cnego <a class="header-anchor" href="#pobieranie-komponentu-zaleznego" aria-hidden="true">#</a></h3><p>Metody te r\xF3\u017Cni\u0105 si\u0119 od <a href="/CraftContainers/pl/learn/search.html">wyszukiwania komponent\xF3w</a>, poniewa\u017C zawsze zwracaj\u0105 komponenty i nie zwracaj\u0105 <code>null</code>.</p><ul><li><p><strong>useComponent(<code>componentClass</code>)</strong> - Zwraca dok\u0142adnie jeden komponent.</p><ol><li><code>componentClass</code> musi by\u0107 klas\u0105 zadeklarowan\u0105 jako zale\u017Cno\u015B\u0107 w komponencie wywo\u0142uj\u0105cym metod\u0119</li></ol><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> componentClass</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>Klasa docelowa <em>(ta, kt\xF3ra jest pobierana)</em> musi by\u0107 oznaczona jako <code>@SingletonComponent</code>.</li></ol></li><li><p><strong>useComponents(<code>componentClass</code>)</strong> - Zwraca list\u0119 komponent\xF3w, kt\xF3ra zawsze zawiera przynajmniej jeden element.</p><ol><li><code>componentClass</code> musi by\u0107 klas\u0105 zadeklarowan\u0105 jako zale\u017Cno\u015B\u0107 w komponencie wywo\u0142uj\u0105cym metod\u0119</li></ol><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Dependency</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">component</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> componentClass</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div></li></ul>`,16),p=[l];function t(c,i,r,d,y,m){return a(),e("div",null,p)}const u=n(s,[["render",t]]);export{k as __pageData,u as default};
